function transmitter(packet,fc)
% Complete the function and remove the following lines

sym_rate = 240;
%fs = 24e3;
fs = 24e3;
padding = zeros(1, 2); % Padding to make it an even number of symbols
barker = [1 1 1 0 0 0 1 0 0 1 0];
packet = packet';
bits_per_sym = 4;

% insert barker preamble for each of the two signals
packet =  [reshape([barker;barker], 1, 2*numel(barker)), packet];
%symbols = [bits2symbols(packet(1:length(barker), 2)) bits2symbols(packet(length(barker)+1:end), bits_per_sym)];
symbols = bits2symbols(packet, bits:);
%scatter(real(symbols), imag(symbols));
symbols_upsampled = upsample(symbols, fs/sym_rate);

% a = rolloff, tau = sym time, fs = sampling freq, span = number of sidelobes
a = 0.35; tau = 1/sym_rate; span = 4;
rrc_pulse = rtrcpuls(a,tau,fs,span);

output = conv(symbols_upsampled, rrc_pulse);

t = (1:numel(output))/fs;
output = real(output).*cos(2*pi*fc*t) + imag(output).*sin(2*pi*fc*t);
size(output)

audio_obj = audioplayer(output,fs);
disp('transmitting')
save('wave.mat', 'output');
%playblocking(audio_obj);
disp('transmission complete')

end